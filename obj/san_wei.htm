<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\san_wei.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\san_wei.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Wed Sep 14 00:47:58 2016
<BR><P>
<H3>Maximum Stack Usage =        328 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[18f6310]">__user_initial_stackheap</a>
 <LI><a href="#[18f3688]">IE_syDisable</a>
 <LI><a href="#[18f364c]">IE_vSet</a>
 <LI><a href="#[18eb960]">IE_vGenerateFirstPendSV</a>
 <LI><a href="#[18eb924]">PendSV_Handler</a>
 <LI><a href="#[18eb8e8]">IE_vGeneratePendSV</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[18f6130]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f6130]">NMI_Handler</a><BR>
 <LI><a href="#[18f60f4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f60f4]">HardFault_Handler</a><BR>
 <LI><a href="#[18f60b8]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f60b8]">MemManage_Handler</a><BR>
 <LI><a href="#[18f607c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f607c]">BusFault_Handler</a><BR>
 <LI><a href="#[18f6040]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f6040]">UsageFault_Handler</a><BR>
 <LI><a href="#[18f6004]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f6004]">SVC_Handler</a><BR>
 <LI><a href="#[18f5fc8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f5fc8]">DebugMon_Handler</a><BR>
 <LI><a href="#[18f5f14]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f5f14]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18f616c]">Reset_Handler</a>
 <LI><a href="#[18f6130]">NMI_Handler</a>
 <LI><a href="#[18f60f4]">HardFault_Handler</a>
 <LI><a href="#[18f60b8]">MemManage_Handler</a>
 <LI><a href="#[18f607c]">BusFault_Handler</a>
 <LI><a href="#[18f6040]">UsageFault_Handler</a>
 <LI><a href="#[18f6004]">SVC_Handler</a>
 <LI><a href="#[18f5fc8]">DebugMon_Handler</a>
 <LI><a href="#[18eb924]">PendSV_Handler</a>
 <LI><a href="#[18f625c]">SysTickHandler</a>
 <LI><a href="#[18f5140]">WWDG_IRQHandler</a>
 <LI><a href="#[18f5884]">PVD_IRQHandler</a>
 <LI><a href="#[18f56a4]">TAMPER_IRQHandler</a>
 <LI><a href="#[18f57d0]">RTC_IRQHandler</a>
 <LI><a href="#[18f59ec]">FLASH_IRQHandler</a>
 <LI><a href="#[18f5848]">RCC_IRQHandler</a>
 <LI><a href="#[18f5b90]">EXTI0_IRQHandler</a>
 <LI><a href="#[18f5b18]">EXTI1_IRQHandler</a>
 <LI><a href="#[18f5adc]">EXTI2_IRQHandler</a>
 <LI><a href="#[18f5aa0]">EXTI3_IRQHandler</a>
 <LI><a href="#[18f5a64]">EXTI4_IRQHandler</a>
 <LI><a href="#[18f5e24]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[18f5de8]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[18f5dac]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[18f5d70]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[18f5d34]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[18f5cf8]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[18f5cbc]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[18f5f14]">ADC1_2_IRQHandler</a>
 <LI><a href="#[18f51b8]">USB_HP_CAN1_TX_IRQHandler</a>
 <LI><a href="#[18f517c]">USB_LP_CAN1_RX0_IRQHandler</a>
 <LI><a href="#[18f5e9c]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[18f5e60]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[18ecc20]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[18f5668]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[18f55b4]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[18f55f0]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[18f562c]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[18f5578]">TIM2_IRQHandler</a>
 <LI><a href="#[18f553c]">TIM3_IRQHandler</a>
 <LI><a href="#[18f5500]">TIM4_IRQHandler</a>
 <LI><a href="#[18f5938]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[18f5974]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[18f58c0]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[18f58fc]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[18f5758]">SPI1_IRQHandler</a>
 <LI><a href="#[18f571c]">SPI2_IRQHandler</a>
 <LI><a href="#[18f52a8]">USART1_IRQHandler</a>
 <LI><a href="#[18f526c]">USART2_IRQHandler</a>
 <LI><a href="#[18ee174]">USART3_IRQHandler</a>
 <LI><a href="#[18ecbe4]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[18f580c]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[18f51f4]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[18f5410]">TIM8_BRK_IRQHandler</a>
 <LI><a href="#[18f535c]">TIM8_UP_IRQHandler</a>
 <LI><a href="#[18f5398]">TIM8_TRG_COM_IRQHandler</a>
 <LI><a href="#[18f53d4]">TIM8_CC_IRQHandler</a>
 <LI><a href="#[18f5ed8]">ADC3_IRQHandler</a>
 <LI><a href="#[18f59b0]">FSMC_IRQHandler</a>
 <LI><a href="#[18f5794]">SDIO_IRQHandler</a>
 <LI><a href="#[18f54c4]">TIM5_IRQHandler</a>
 <LI><a href="#[18f56e0]">SPI3_IRQHandler</a>
 <LI><a href="#[18ee0fc]">UART4_IRQHandler</a>
 <LI><a href="#[18f52e4]">UART5_IRQHandler</a>
 <LI><a href="#[18f5488]">TIM6_IRQHandler</a>
 <LI><a href="#[18f544c]">TIM7_IRQHandler</a>
 <LI><a href="#[18f5c80]">DMA2_Channel1_IRQHandler</a>
 <LI><a href="#[18f5c44]">DMA2_Channel2_IRQHandler</a>
 <LI><a href="#[18f5c08]">DMA2_Channel3_IRQHandler</a>
 <LI><a href="#[18f5bcc]">DMA2_Channel4_5_IRQHandler</a>
 <LI><a href="#[198e77c]">__main</a>
 <LI><a href="#[18f0dfc]">_vInterruptProcess</a>
 <LI><a href="#[198b914]">_sputc</a>
 <LI><a href="#[198ba7c]">_printf_input_char</a>
 <LI><a href="#[26a191c]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[198e77c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[198c274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[269f5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[269f5f4]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[198e77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[269f5b8]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198c274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[269f57c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[269f540]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[269f720]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[269f6e4]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[269f39c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[198ec68]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[198cee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[198ebb4]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[198f0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[198b860]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[19872c4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a2ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1989f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[26a3dac]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[26a3c80]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[19899ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[26a3cbc]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[26a3d34]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[26a3c08]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[26a3b90]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[26a3b18]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[26a3adc]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[1988728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[26a3578]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[26a35f0]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[26a39b0]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[26a3848]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[26a3488]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[26a3500]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[26a38c0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[26a37d0]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[26a3aa0]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[26a3a28]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[26a344c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[26a3938]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[26a3758]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[26a1b74]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26a2948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[26a1070]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[26a0e90]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[26a0e54]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[26a0fbc]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[26a1124]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[26a0f44]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[198c274]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[198e77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[269f5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1989fc4]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[1989c40]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1987918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1989f10]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[19872c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1989f4c]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[1989e5c]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Sample_ch4 &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[19877b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1989e98]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[26a2eac]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[19877b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[26a2948]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[26a1b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[26a2984]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[26a290c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[26a20d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[18efe84]"></a>__RBIT1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ad7606.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[18f3778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Handle
</UL>

<P><STRONG><a name="[18eefc0]"></a>nop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1335.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[18eef84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SomeNopRA8835P
</UL>

<P><STRONG><a name="[18f616c]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f6130]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f6130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f6130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f60f4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f60f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f60b8]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f60b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f60b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f607c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f607c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f607c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f6040]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f6040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f6040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f6004]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f6004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f6004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5fc8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f5fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f5fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5f50]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f5f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f5f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[18f5f14]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f5f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18f5f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5ed8]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5e9c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5e60]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5e24]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5de8]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5dac]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5d70]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5d34]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5cf8]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5cbc]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5c80]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5c44]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5c08]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5bcc]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5b90]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5b18]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5adc]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5aa0]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5a64]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f59ec]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f59b0]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5974]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5938]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f58fc]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f58c0]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5884]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5848]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f580c]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f57d0]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5794]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5758]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f571c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f56e0]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f56a4]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5668]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f562c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f55f0]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f55b4]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5578]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f553c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5500]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f54c4]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5488]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f544c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5410]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f53d4]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5398]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f535c]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f52e4]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f52a8]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f526c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f51f4]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f51b8]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f517c]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f5140]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f6310]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1987918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[18f382c]"></a>sysclk_int</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sysclk_int &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[18f337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[18f33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[18f33f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[18f3430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[18f346c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[18f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSICmd
<LI><a href="#[18f34e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[18f3520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[18f355c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[18f3598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f37f0]"></a>main</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = main &rArr; Sample_ch4 &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
<LI><a href="#[18f2f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_gui
<LI><a href="#[18f2f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_NSS
<LI><a href="#[18f2fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testClockInit
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
<LI><a href="#[18f3070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen1
<LI><a href="#[18f30ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[18f3124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chdisp
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
<LI><a href="#[18f35d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PGA204Init
<LI><a href="#[18f3610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MachineFaultInit
<LI><a href="#[18f364c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IE_vSet
<LI><a href="#[18f3688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IE_syDisable
<LI><a href="#[18f36c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_DeInit
<LI><a href="#[18f3700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Init
<LI><a href="#[18f373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Init
<LI><a href="#[18f3778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Handle
<LI><a href="#[18f37b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7545_Init
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
<LI><a href="#[198d318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[198d78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[198f7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1989e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[18f28b4]"></a>delay_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, delay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f2800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>

<P><STRONG><a name="[18f2878]"></a>delay_us</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[18f283c]"></a>delay_ms</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[18f30e8]"></a>delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18eeb4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Test
<LI><a href="#[18eecb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear3
<LI><a href="#[18eecf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear2
<LI><a href="#[18eed2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1
<LI><a href="#[18eed68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
<LI><a href="#[18f3124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chdisp
<LI><a href="#[18f3700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Init
<LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f3610]"></a>MachineFaultInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, powermachinefault.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MachineFaultInit &rArr; ExtLineConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f19b4]"></a>Sample_Chanal</STRONG> (Thumb, 430 bytes, Stack size 104 bytes, monitoring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198c544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198da20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[198dad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[198dd2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[198e128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[198e4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[18f1978]"></a>Sample_ch6</STRONG> (Thumb, 370 bytes, Stack size 88 bytes, monitoring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198c544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198da20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[198dad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[198dd2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[198e128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[198e4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[18f3340]"></a>Sample_ch4</STRONG> (Thumb, 464 bytes, Stack size 88 bytes, monitoring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Sample_ch4 &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[198c544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198da20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[198dad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[198dd2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[198e128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[198e4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f193c]"></a>Sample_ch7</STRONG> (Thumb, 396 bytes, Stack size 88 bytes, monitoring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198c544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198da20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[198dad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[198dd2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[198e128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[198e4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[18f11bc]"></a>It_vSetException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, driverit.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18f0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverSystickInit
</UL>

<P><STRONG><a name="[18f1180]"></a>PendSVC</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, driverit.o(.text), UNUSED)

<P><STRONG><a name="[18f625c]"></a>SysTickHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, driverit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f0b2c]"></a>DriverSystickInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, driversystick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f094c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_SetReload
<LI><a href="#[18f0988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ITConfig
<LI><a href="#[18f09c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
<LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f11bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;It_vSetException
<LI><a href="#[18f2800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[18f3598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
</UL>

<P><STRONG><a name="[18f2fbc]"></a>testClockInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, driversystick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = testClockInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f0af0]"></a>Timer_vStart</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, driversystick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f09c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
</UL>

<P><STRONG><a name="[18f0ab4]"></a>Timer_vStop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, driversystick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f09c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
</UL>

<P><STRONG><a name="[18f373c]"></a>AD7606_Init</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, ad7606.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AD7606_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f3778]"></a>AD7606_Handle</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, ad7606.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AD7606_Handle
</UL>
<BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[18efe48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputData
<LI><a href="#[18efe84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RBIT1
</UL>
<BR>[Called By]<UL><LI><a href="#[18ecc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18eef84]"></a>SomeNopRA8835P</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eefc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop
</UL>
<BR>[Called By]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>

<P><STRONG><a name="[18eef48]"></a>AG320240_GPIOConfig</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AG320240_GPIOConfig &rArr; ExtLineConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18eead4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_1_innit
<LI><a href="#[18eeb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[18f1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLineConfig
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Init
</UL>

<P><STRONG><a name="[18eef0c]"></a>WriteCommandRA8835P</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteCommandRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[18eef84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SomeNopRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18ec3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[18ec428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDots
<LI><a href="#[18eeb88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_frame
<LI><a href="#[18eec3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_biao
<LI><a href="#[18eec78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame
<LI><a href="#[18eecb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear3
<LI><a href="#[18eecf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear2
<LI><a href="#[18eed2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1
<LI><a href="#[18eed68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[18eeda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPictureRA8835
<LI><a href="#[18eede0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanScreen
<LI><a href="#[18eee1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Locate
<LI><a href="#[18eee58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowScreen2
<LI><a href="#[18eee94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowScreen1
<LI><a href="#[18f2f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_gui
<LI><a href="#[18f3700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Init
</UL>

<P><STRONG><a name="[18eeed0]"></a>WriteDataRA8835P</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[18eef84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SomeNopRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18ec428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDots
<LI><a href="#[18eeb88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_frame
<LI><a href="#[18eebc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzdisp
<LI><a href="#[18eec00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzdisp1
<LI><a href="#[18eec3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_biao
<LI><a href="#[18eec78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame
<LI><a href="#[18eecb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear3
<LI><a href="#[18eecf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear2
<LI><a href="#[18eed2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1
<LI><a href="#[18eed68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[18eeda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPictureRA8835
<LI><a href="#[18eede0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanScreen
<LI><a href="#[18eee1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Locate
<LI><a href="#[18eee58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowScreen2
<LI><a href="#[18eee94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowScreen1
<LI><a href="#[18f2f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_gui
<LI><a href="#[18f3124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chdisp
<LI><a href="#[18f3700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Init
</UL>

<P><STRONG><a name="[18eee94]"></a>ShowScreen1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18eeb4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Test
</UL>

<P><STRONG><a name="[18eee58]"></a>ShowScreen2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>

<P><STRONG><a name="[18eee1c]"></a>Display_Locate</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>

<P><STRONG><a name="[18eede0]"></a>ScanScreen</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18eeb4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Test
</UL>

<P><STRONG><a name="[18eeda4]"></a>DrawPictureRA8835</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18eeb4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Test
</UL>

<P><STRONG><a name="[18eed68]"></a>SetCursor</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetCursor &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18ec3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[18eebc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzdisp
<LI><a href="#[18eec00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzdisp1
<LI><a href="#[18f3124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chdisp
</UL>

<P><STRONG><a name="[18f3124]"></a>chdisp</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = chdisp &rArr; SetCursor &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eed68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
<LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18eed2c]"></a>clear1</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = clear1 &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
</UL>

<P><STRONG><a name="[18eecf0]"></a>clear2</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = clear2 &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
</UL>

<P><STRONG><a name="[18eecb4]"></a>clear3</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = clear3 &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
</UL>

<P><STRONG><a name="[18eec78]"></a>frame</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>

<P><STRONG><a name="[18eec3c]"></a>dis_biao</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>

<P><STRONG><a name="[18eec00]"></a>hzdisp1</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hzdisp1 &rArr; SetCursor &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eed68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
</UL>

<P><STRONG><a name="[18eebc4]"></a>hzdisp</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hzdisp &rArr; SetCursor &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eed68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
</UL>

<P><STRONG><a name="[18eeb88]"></a>dis_frame</STRONG> (Thumb, 582 bytes, Stack size 16 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dis_frame &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18f3034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen2
</UL>

<P><STRONG><a name="[18f3070]"></a>screen1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1335.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f3034]"></a>screen2</STRONG> (Thumb, 398 bytes, Stack size 8 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = screen2 &rArr; chdisp &rArr; SetCursor &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeb88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_frame
<LI><a href="#[18eebc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzdisp
<LI><a href="#[18eec00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzdisp1
<LI><a href="#[18eecb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear3
<LI><a href="#[18eecf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear2
<LI><a href="#[18eed2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1
<LI><a href="#[18f3124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chdisp
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f3700]"></a>AG320240_Init</STRONG> (Thumb, 318 bytes, Stack size 8 bytes, 1335.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AG320240_Init &rArr; AG320240_GPIOConfig &rArr; ExtLineConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18eead4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_1_innit
<LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
<LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18eeb4c]"></a>AG320240_Test</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, 1335.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPictureRA8835
<LI><a href="#[18eede0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanScreen
<LI><a href="#[18eee94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowScreen1
<LI><a href="#[18f30e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[18f37b4]"></a>AD7545_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, da7545.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AD7545_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f2ff8]"></a>setDC_Value</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, da7545.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = setDC_Value &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[198d0c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198da20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[198e4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[18ecbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[18ecc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[18ee0c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7545_handle
<LI><a href="#[18ee0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[18ee138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurentPercent
<LI><a href="#[18ee174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f2f08]"></a>usart4Init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, driverusart4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = usart4Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[18ede68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[18edea4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[18edf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[18edf58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[18edfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[18ee00c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[18ee048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[18ee084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18ee174]"></a>USART3_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, driverusart4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART3_IRQHandler &rArr; setDC_Value &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[18ede2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[18edee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[18edf94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ee138]"></a>SetCurentPercent</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, driverusart4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SetCurentPercent &rArr; setDC_Value &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[18ee0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[18ee0fc]"></a>UART4_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, driverusart4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART4_IRQHandler &rArr; SetCurentPercent &rArr; setDC_Value &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[18edf94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[18ee138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurentPercent
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ee0c0]"></a>AD7545_handle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, driverusart4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[198ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[18f35d4]"></a>PGA204Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pga204.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PGA204Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18ed97c]"></a>SetAmplification</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, pga204.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[18eead4]"></a>spi_1_innit</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, driverspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_1_innit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18ed3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SSOutputCmd
<LI><a href="#[18ed3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[18ed418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
<LI><a href="#[18f3700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_Init
</UL>

<P><STRONG><a name="[18f2f80]"></a>test_NSS</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, driverspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = test_NSS &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18ed508]"></a>SPI1_Write</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, driverspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[18ed4cc]"></a>SPI1_WriteRead</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, driverspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI1_WriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[18ecba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_chumo
<LI><a href="#[18ecc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[18ed490]"></a>SPI1_Read</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, driverspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18efdd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18efe0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[18ed454]"></a>SPI1_ReadByte</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, driverspi.o(.text), UNUSED)

<P><STRONG><a name="[18f1f90]"></a>ExtLineConfig</STRONG> (Thumb, 418 bytes, Stack size 40 bytes, driverextline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ExtLineConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18ecab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[18ecaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[18ee084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
<LI><a href="#[18f3610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MachineFaultInit
</UL>

<P><STRONG><a name="[18ecc20]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, driverextline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EXTI9_5_IRQHandler &rArr; setDC_Value &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[18eca40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[18ecb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetFlagStatus
<LI><a href="#[18ecb6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[18ed4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_WriteRead
<LI><a href="#[18eeb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[18f3778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ecbe4]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, driverextline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EXTI15_10_IRQHandler &rArr; setDC_Value &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[18ecb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetFlagStatus
<LI><a href="#[18ecb6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ecba8]"></a>test_chumo</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, driverextline.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eca7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[18ed4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_WriteRead
</UL>

<P><STRONG><a name="[18ec428]"></a>DrawDots</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18ec3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
</UL>

<P><STRONG><a name="[18ec3ec]"></a>DrawLine</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, gui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18ec428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDots
<LI><a href="#[18eed68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>

<P><STRONG><a name="[18f2f44]"></a>test_gui</STRONG> (Thumb, 414 bytes, Stack size 8 bytes, gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = test_gui &rArr; WriteDataRA8835P &rArr; SomeNopRA8835P
</UL>
<BR>[Calls]<UL><LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f30ac]"></a>led_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = led_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f0a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f3688]"></a>IE_syDisable</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f364c]"></a>IE_vSet</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18eb960]"></a>IE_vGenerateFirstPendSV</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text), UNUSED)

<P><STRONG><a name="[18eb924]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18eb8e8]"></a>IE_vGeneratePendSV</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text), UNUSED)

<P><STRONG><a name="[18f094c]"></a>SysTick_SetReload</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_systick.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18f0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverSystickInit
</UL>

<P><STRONG><a name="[18f09c4]"></a>SysTick_CounterCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f10x_systick.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18f0ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_vStop
<LI><a href="#[18f0af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_vStart
<LI><a href="#[18f0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverSystickInit
</UL>

<P><STRONG><a name="[18f0988]"></a>SysTick_ITConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f10x_systick.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18f0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverSystickInit
</UL>

<P><STRONG><a name="[19958b0]"></a>SysTick_GetCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_systick.o(.text), UNUSED)

<P><STRONG><a name="[1995874]"></a>SysTick_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f10x_systick.o(.text), UNUSED)

<P><STRONG><a name="[18f36c4]"></a>EXTI_DeInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18ecaf4]"></a>EXTI_Init</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLineConfig
</UL>

<P><STRONG><a name="[1993a74]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[1993a38]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[18ecb30]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18ecbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[18ecc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[19939fc]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[19939c0]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[18ecb6c]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18ecbe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[18ecc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[18f3598]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverSystickInit
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[199354c]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[18f355c]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
<LI><a href="#[1993510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[1993510]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f355c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[19934d4]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18f34a8]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[18f33b8]"></a>RCC_PLLConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[18f33f4]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[18f337c]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[18f3520]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[18f34e4]"></a>RCC_HCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[18f346c]"></a>RCC_PCLK1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[18f3430]"></a>RCC_PCLK2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f382c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_int
</UL>

<P><STRONG><a name="[1993498]"></a>RCC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[199345c]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1993420]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19933e4]"></a>RCC_LSEConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19933a8]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[199336c]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1993330]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19932f4]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[18ede68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[1992dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
</UL>

<P><STRONG><a name="[18ebdd4]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18f0a3c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18eead4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_1_innit
<LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
<LI><a href="#[18f0a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
<LI><a href="#[18f2f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_NSS
<LI><a href="#[18f2fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testClockInit
<LI><a href="#[18f30ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[18f35d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PGA204Init
<LI><a href="#[18f373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Init
<LI><a href="#[18f37b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7545_Init
</UL>

<P><STRONG><a name="[18ee00c]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[18e82c4]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18edf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[1990dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[1990e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[1992e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[18e8300]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18edf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[1992e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[19932b8]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[199327c]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1993240]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1993204]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19931c8]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[199318c]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18f0a00]"></a>RCC_Configuration</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f0a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[18f337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[18f33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[18f33f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[18f3430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[18f346c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[18f34e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[18f3520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[18f355c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[18f3598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[1993510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[199354c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18f0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverSystickInit
</UL>

<P><STRONG><a name="[1992e08]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e82c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[18e8300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[18ed3dc]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18eead4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_1_innit
</UL>

<P><STRONG><a name="[1992dcc]"></a>I2S_Init</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19932f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[1992d90]"></a>SPI_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992d54]"></a>I2S_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[18ed418]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18eead4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_1_innit
</UL>

<P><STRONG><a name="[1992d18]"></a>I2S_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992cdc]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992ca0]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992c64]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992c28]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992bec]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[18ed3a0]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18eead4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_1_innit
</UL>

<P><STRONG><a name="[1992bb0]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992b74]"></a>SPI_TransmitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992b38]"></a>SPI_CalculateCRC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992afc]"></a>SPI_GetCRC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992ac0]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992a84]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992a48]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992a0c]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[19929d0]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1992994]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[18f6220]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19917c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[199156c]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)

<P><STRONG><a name="[18ee048]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[18ee084]"></a>NVIC_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLineConfig
<LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[19911e8]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[19911ac]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[18f2800]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18f0b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverSystickInit
<LI><a href="#[18f28b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[1990e28]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e82c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[1990dec]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e82c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[18f0a78]"></a>GPIO_Init</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18eead4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_1_innit
<LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
<LI><a href="#[18f1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLineConfig
<LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
<LI><a href="#[18f2f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_NSS
<LI><a href="#[18f2fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testClockInit
<LI><a href="#[18f30ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[18f35d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PGA204Init
<LI><a href="#[18f373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Init
<LI><a href="#[18f37b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7545_Init
</UL>

<P><STRONG><a name="[1990db0]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[18eca7c]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18ecba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_chumo
</UL>

<P><STRONG><a name="[18efe48]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f3778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Handle
</UL>

<P><STRONG><a name="[18eca40]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18ecc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[1990d74]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[18efdd0]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18ed490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Read
<LI><a href="#[18ed4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_WriteRead
<LI><a href="#[18ed508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Write
<LI><a href="#[18ed97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAmplification
<LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
<LI><a href="#[18f2f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_NSS
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[18f373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Init
<LI><a href="#[18f3778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Handle
<LI><a href="#[18f37b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7545_Init
</UL>

<P><STRONG><a name="[18efe0c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18ed490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Read
<LI><a href="#[18ed4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_WriteRead
<LI><a href="#[18ed508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Write
<LI><a href="#[18ed97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAmplification
<LI><a href="#[18f2f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_NSS
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[18f35d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PGA204Init
<LI><a href="#[18f373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Init
<LI><a href="#[18f3778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7606_Handle
</UL>

<P><STRONG><a name="[18eeb10]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18ecc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[18eeed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataRA8835P
<LI><a href="#[18eef0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandRA8835P
<LI><a href="#[18eef48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AG320240_GPIOConfig
</UL>

<P><STRONG><a name="[1990d38]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1990cfc]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1990cc0]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1990c84]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1990c48]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[18ecab8]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18f1f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLineConfig
</UL>

<P><STRONG><a name="[1990c0c]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[18edf1c]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[18e82c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[18e8300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[18ede68]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[19932f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[1990888]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[199084c]"></a>USART_ClockInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1990810]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[18edf58]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[18edea4]"></a>USART_ITConfig</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[19907d4]"></a>USART_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1990798]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[199075c]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1990720]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[19906e4]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[19906a8]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[199066c]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[18ede2c]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18ee174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[1990630]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[19905f4]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[19905b8]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[199057c]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1990540]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1990504]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[19904c8]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[199048c]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1990450]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1990414]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[19903d8]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[18edfd0]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f2f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart4Init
</UL>

<P><STRONG><a name="[18edee0]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[18ee174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[18edf94]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[18ee0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[18ee174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[198f7a8]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[198b914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[198ba40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[198f5c8]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1989448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[198f58c]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1989448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[198f0dc]"></a>__printf</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, __printf_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[198ebb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[198ba40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[198ea88]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18ee0c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7545_handle
</UL>

<P><STRONG><a name="[198ea4c]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[198ea10]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[198e8e4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[198e8a8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[198e86c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[198c01c]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19896a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[198bfe0]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[19896a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[198c544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[198be78]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[198be3c]"></a>_printf_fp_dec_real</STRONG> (Thumb, 626 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1987d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[19885c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[1989448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[19899ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[198beb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[198f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[198f5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[198cee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[198ba40]"></a>_printf_char_common</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[198f0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[198f7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[198b914]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198f7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[198b770]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[198b734]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[198b6f8]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[198b6bc]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[198ea4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[19899ac]"></a>__rt_locale</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[26a3c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[19896a0]"></a>__aeabi_errno_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198bfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[198c01c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[1989664]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1989628]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1989538]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[198beb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1989448]"></a>_printf_fp_infnan</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[198f58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[198f5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[19891b4]"></a>_btod_etento</STRONG> (Thumb, 206 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1988a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[1988aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[198beb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[19885c0]"></a>__rt_udiv10</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[1987a80]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1987a44]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1987918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1987a08]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1987918]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[18f6310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[1987a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[1989c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[19877b0]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26a2eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1989e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1987648]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1988728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[26a2600]"></a>__rt_fp_status_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26a2ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[26a20d8]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26a290c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[26a191c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[26a18e0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1988c14]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[1988b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[198beb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1988bd8]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[1988b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[1988b9c]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[1988bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[1988c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[1988b60]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1988aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[1988ae8]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[1988a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[1988aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[1988aac]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1988ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[1988b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[19891b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[198beb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1988a34]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[19889bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[1988ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[19891b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[198beb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[19889bc]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1988a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[1987d14]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[198a5a0]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 752 bytes, Stack size 96 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[1988110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[19882f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[198aac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198dad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[198dd2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[198dffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[198e074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[198e128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[198a834]"></a>__kernel_cos</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1987c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[19882f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[198aac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198dffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[198e074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1987c24]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198e128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[198a3fc]"></a>__kernel_sin</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1987c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[198aac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[198d8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[198dffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[198e074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[198e128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[198cd00]"></a>cos</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[198aac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[198bfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
</UL>

<P><STRONG><a name="[198c88c]"></a>sin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[198aac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[198bfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
</UL>

<P><STRONG><a name="[198c544]"></a>sqrt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[198b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[198b3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[198bfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
</UL>

<P><STRONG><a name="[1988728]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[1987648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[26a3adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[198e4e8]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
</UL>

<P><STRONG><a name="[198e4ac]"></a>_d2f</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[198e470]"></a>__fpl_inf_d2f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[198e128]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
<LI><a href="#[1987c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[198e0ec]"></a>_dadd</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[198e164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[198e0b0]"></a>__fpl_inf_dadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[198b5cc]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[1987ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1988110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[19884d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[198d8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[198dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[198dfc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[198e0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[198b4a0]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[1987ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[19882b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[198aac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[198b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[198e4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[19884d0]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[26a2f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[198b374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[1988494]"></a>__fpl_inf_dcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[198dd2c]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[198dcf0]"></a>_ddiv</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[198dc78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
</UL>

<P><STRONG><a name="[198dcb4]"></a>__fpl_inf_ddiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[198dc78]"></a>_ddiv_mantissas</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[198dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[19882f0]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[19882b4]"></a>_dfix</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[1988278]"></a>__fpl_inf_dfix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[198dad4]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[198da98]"></a>_dflt</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[198da5c]"></a>__dflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dflt_clz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[198d9e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfltu
</UL>

<P><STRONG><a name="[198da20]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
</UL>

<P><STRONG><a name="[198d9e4]"></a>_dfltu</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198da5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
</UL>

<P><STRONG><a name="[198b3b0]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[198c544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[198b374]"></a>_dcmple</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19884d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[198d8f4]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[18f193c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch7
<LI><a href="#[18f1978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch6
<LI><a href="#[18f19b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_Chanal
<LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
<LI><a href="#[18f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_ch4
<LI><a href="#[1987c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[198d8b8]"></a>_dmul</STRONG> (Thumb, 440 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[198d87c]"></a>__fpl_inf_dmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[1988110]"></a>_drem</STRONG> (Thumb, 396 bytes, Stack size 16 bytes, drem_clz.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[198b5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[19880d4]"></a>__fpl_inf_drem</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, drem_clz.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[198e074]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[198e038]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198e164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[198e1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[198b248]"></a>_dsqrt</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[198b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[198c544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[198b20c]"></a>__fpl_inf_dsqrt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[198dffc]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[198dfc0]"></a>_dsub</STRONG> (Thumb, 572 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198b5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[198e1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[198df84]"></a>__fpl_inf_dsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[198b11c]"></a>__dunder</STRONG> (Thumb, 234 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[198b0e0]"></a>__dunder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[198d78c]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[198d750]"></a>_f2d</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198af00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[198d714]"></a>__fpl_inf_f2d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[198d444]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[198d408]"></a>_fadd</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198aff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[198d480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[198d3cc]"></a>__fpl_inf_fadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[198aff0]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1987ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[198af00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[198d2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[198d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[198af00]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1987ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[198aff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[198d084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[198d750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[198d0c0]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[18f2ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDC_Value
</UL>

<P><STRONG><a name="[198d084]"></a>_ffixu</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198af00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[198d048]"></a>__fpl_inf_ffixu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[26a2ba0]"></a>_fp_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a2600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[19872c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[26a2b64]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[198d318]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Called By]<UL><LI><a href="#[18f37f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[198d2dc]"></a>_fsub</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198aff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[198d4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[198d2a0]"></a>__fpl_inf_fsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[198ae10]"></a>__funder</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[198add4]"></a>__funder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[198cee0]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[198ec68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[1987ef4]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[26a2f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[198af00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[198aff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[198b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[198b5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[198ab04]"></a>__ARM_scalbn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[198aac8]"></a>scalbn</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[198b4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[198a3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[198a5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[198a834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[198c88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[198cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[198aa8c]"></a>__fpl_inf_scalbn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, scalbn.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[26a2f60]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[1987ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[19884d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[198a99c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[18f0dfc]"></a>_vInterruptProcess</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, driversystick.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> driversystick.o(.text)
</UL>
<P><STRONG><a name="[1991800]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19917c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[19917c4]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1991800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[18f6220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[198e1a0]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[198dfc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[198e038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[198e164]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[198e038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[198e0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[198d4bc]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[198d2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[198d480]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[198d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[198beb4]"></a>_fp_digits</STRONG> (Thumb, 492 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1988a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[1988aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[1988c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[19891b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[1989538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[198be3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[198ba7c]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
